/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/zdog/js/anchor.js":
/*!****************************************!*\
  !*** ./node_modules/zdog/js/anchor.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Anchor\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./vector */ \"./node_modules/zdog/js/vector.js\"),\n        __webpack_require__(/*! ./canvas-renderer */ \"./node_modules/zdog/js/canvas-renderer.js\"), __webpack_require__(/*! ./svg-renderer */ \"./node_modules/zdog/js/svg-renderer.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Anchor = factory( Zdog, Zdog.Vector, Zdog.CanvasRenderer,\n        Zdog.SvgRenderer );\n  }\n}( this, function factory( utils, Vector, CanvasRenderer, SvgRenderer ) {\n\nvar TAU = utils.TAU;\nvar onePoint = { x: 1, y: 1, z: 1 };\n\nfunction Anchor( options ) {\n  this.create( options || {} );\n}\n\nAnchor.prototype.create = function( options ) {\n  this.children = [];\n  // set defaults & options\n  utils.extend( this, this.constructor.defaults );\n  this.setOptions( options );\n\n  // transform\n  this.translate = new Vector( options.translate );\n  this.rotate = new Vector( options.rotate );\n  this.scale = new Vector( onePoint ).multiply( this.scale );\n  // origin\n  this.origin = new Vector();\n  this.renderOrigin = new Vector();\n\n  if ( this.addTo ) {\n    this.addTo.addChild( this );\n  }\n};\n\nAnchor.defaults = {};\n\nAnchor.optionKeys = Object.keys( Anchor.defaults ).concat([\n  'rotate',\n  'translate',\n  'scale',\n  'addTo',\n]);\n\nAnchor.prototype.setOptions = function( options ) {\n  var optionKeys = this.constructor.optionKeys;\n\n  for ( var key in options ) {\n    if ( optionKeys.indexOf( key ) != -1 ) {\n      this[ key ] = options[ key ];\n    }\n  }\n};\n\nAnchor.prototype.addChild = function( shape ) {\n  if ( this.children.indexOf( shape ) != -1 ) {\n    return;\n  }\n  shape.remove(); // remove previous parent\n  shape.addTo = this; // keep parent reference\n  this.children.push( shape );\n};\n\nAnchor.prototype.removeChild = function( shape ) {\n  var index = this.children.indexOf( shape );\n  if ( index != -1 ) {\n    this.children.splice( index, 1 );\n  }\n};\n\nAnchor.prototype.remove = function() {\n  if ( this.addTo ) {\n    this.addTo.removeChild( this );\n  }\n};\n\n// ----- update ----- //\n\nAnchor.prototype.update = function() {\n  // update self\n  this.reset();\n  // update children\n  this.children.forEach( function( child ) {\n    child.update();\n  });\n  this.transform( this.translate, this.rotate, this.scale );\n};\n\nAnchor.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n};\n\nAnchor.prototype.transform = function( translation, rotation, scale ) {\n  this.renderOrigin.transform( translation, rotation, scale );\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nAnchor.prototype.updateGraph = function() {\n  this.update();\n  this.updateFlatGraph();\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n  });\n  // z-sort\n  this.flatGraph.sort( Anchor.shapeSorter );\n};\n\nAnchor.shapeSorter = function( a, b ) {\n  return a.sortValue - b.sortValue;\n};\n\n// custom getter to check for flatGraph before using it\nObject.defineProperty( Anchor.prototype, 'flatGraph', {\n  get: function() {\n    if ( !this._flatGraph ) {\n      this.updateFlatGraph();\n    }\n    return this._flatGraph;\n  },\n  set: function( graph ) {\n    this._flatGraph = graph;\n  },\n});\n\nAnchor.prototype.updateFlatGraph = function() {\n  this.flatGraph = this.getFlatGraph();\n};\n\n// return Array of self & all child graph items\nAnchor.prototype.getFlatGraph = function() {\n  var flatGraph = [ this ];\n  return this.addChildFlatGraph( flatGraph );\n};\n\nAnchor.prototype.addChildFlatGraph = function( flatGraph ) {\n  this.children.forEach( function( child ) {\n    var childFlatGraph = child.getFlatGraph();\n    Array.prototype.push.apply( flatGraph, childFlatGraph );\n  });\n  return flatGraph;\n};\n\nAnchor.prototype.updateSortValue = function() {\n  this.sortValue = this.renderOrigin.z;\n};\n\n// ----- render ----- //\n\nAnchor.prototype.render = function() {};\n\n// TODO refactor out CanvasRenderer so its not a dependency within anchor.js\nAnchor.prototype.renderGraphCanvas = function( ctx ) {\n  if ( !ctx ) {\n    throw new Error( 'ctx is ' + ctx + '. ' +\n      'Canvas context required for render. Check .renderGraphCanvas( ctx ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, CanvasRenderer );\n  });\n};\n\nAnchor.prototype.renderGraphSvg = function( svg ) {\n  if ( !svg ) {\n    throw new Error( 'svg is ' + svg + '. ' +\n      'SVG required for render. Check .renderGraphSvg( svg ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( svg, SvgRenderer );\n  });\n};\n\n// ----- misc ----- //\n\nAnchor.prototype.copy = function( options ) {\n  // copy options\n  var itemOptions = {};\n  var optionKeys = this.constructor.optionKeys;\n  optionKeys.forEach( function( key ) {\n    itemOptions[ key ] = this[ key ];\n  }, this );\n  // add set options\n  utils.extend( itemOptions, options );\n  var ItemClass = this.constructor;\n  return new ItemClass( itemOptions );\n};\n\nAnchor.prototype.copyGraph = function( options ) {\n  var clone = this.copy( options );\n  this.children.forEach( function( child ) {\n    child.copyGraph({\n      addTo: clone,\n    });\n  });\n  return clone;\n};\n\nAnchor.prototype.normalizeRotate = function() {\n  this.rotate.x = utils.modulo( this.rotate.x, TAU );\n  this.rotate.y = utils.modulo( this.rotate.y, TAU );\n  this.rotate.z = utils.modulo( this.rotate.z, TAU );\n};\n\n// ----- subclass ----- //\n\nfunction getSubclass( Super ) {\n  return function( defaults ) {\n    // create constructor\n    function Item( options ) {\n      this.create( options || {} );\n    }\n\n    Item.prototype = Object.create( Super.prototype );\n    Item.prototype.constructor = Item;\n\n    Item.defaults = utils.extend( {}, Super.defaults );\n    utils.extend( Item.defaults, defaults );\n    // create optionKeys\n    Item.optionKeys = Super.optionKeys.slice(0);\n    // add defaults keys to optionKeys, dedupe\n    Object.keys( Item.defaults ).forEach( function( key ) {\n      if ( !Item.optionKeys.indexOf( key ) != 1 ) {\n        Item.optionKeys.push( key );\n      }\n    });\n\n    Item.subclass = getSubclass( Item );\n\n    return Item;\n  };\n}\n\nAnchor.subclass = getSubclass( Anchor );\n\nreturn Anchor;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/anchor.js?");

/***/ }),

/***/ "./node_modules/zdog/js/boilerplate.js":
/*!*********************************************!*\
  !*** ./node_modules/zdog/js/boilerplate.js ***!
  \*********************************************/
/***/ (function(module) {

eval("/*!\n * Zdog v1.1.2\n * Round, flat, designer-friendly pseudo-3D engine\n * Licensed MIT\n * https://zzz.dog\n * Copyright 2020 Metafizzy\n */\n\n/**\n * Boilerplate & utils\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog = factory();\n  }\n}( this, function factory() {\n\nvar Zdog = {};\n\nZdog.TAU = Math.PI * 2;\n\nZdog.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\nZdog.lerp = function( a, b, alpha ) {\n  return ( b - a ) * alpha + a;\n};\n\nZdog.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\nvar powerMultipliers = {\n  2: function( a ) {\n    return a * a;\n  },\n  3: function( a ) {\n    return a * a * a;\n  },\n  4: function( a ) {\n    return a * a * a * a;\n  },\n  5: function( a ) {\n    return a * a * a * a * a;\n  },\n};\n\nZdog.easeInOut = function( alpha, power ) {\n  if ( power == 1 ) {\n    return alpha;\n  }\n  alpha = Math.max( 0, Math.min( 1, alpha ) );\n  var isFirstHalf = alpha < 0.5;\n  var slope = isFirstHalf ? alpha : 1 - alpha;\n  slope /= 0.5;\n  // make easing steeper with more multiples\n  var powerMultiplier = powerMultipliers[ power ] || powerMultipliers[2];\n  var curve = powerMultiplier( slope );\n  curve /= 2;\n  return isFirstHalf ? curve : 1 - curve;\n};\n\nreturn Zdog;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/boilerplate.js?");

/***/ }),

/***/ "./node_modules/zdog/js/box.js":
/*!*************************************!*\
  !*** ./node_modules/zdog/js/box.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Box composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\"),\n        __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\"), __webpack_require__(/*! ./rect */ \"./node_modules/zdog/js/rect.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Box = factory( Zdog, Zdog.Anchor, Zdog.Shape, Zdog.Rect );\n  }\n}( this, function factory( utils, Anchor, Shape, Rect ) {\n\n// ----- BoxRect ----- //\n\nvar BoxRect = Rect.subclass();\n// prevent double-creation in parent.copyGraph()\n// only create in Box.create()\nBoxRect.prototype.copyGraph = function() {};\n\n// ----- Box ----- //\n\nvar TAU = utils.TAU;\nvar faceNames = [\n  'frontFace',\n  'rearFace',\n  'leftFace',\n  'rightFace',\n  'topFace',\n  'bottomFace',\n];\n\nvar boxDefaults = utils.extend( {}, Shape.defaults );\ndelete boxDefaults.path;\nfaceNames.forEach( function( faceName ) {\n  boxDefaults[ faceName ] = true;\n});\nutils.extend( boxDefaults, {\n  width: 1,\n  height: 1,\n  depth: 1,\n  fill: true,\n});\n\nvar Box = Anchor.subclass( boxDefaults );\n\nBox.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // HACK reset fill to trigger face setter\n  this.fill = this.fill;\n};\n\nBox.prototype.updatePath = function() {\n  // reset all faces to trigger setters\n  faceNames.forEach( function( faceName ) {\n    this[ faceName ] = this[ faceName ];\n  }, this );\n};\n\nfaceNames.forEach( function( faceName ) {\n  var _faceName = '_' + faceName;\n  Object.defineProperty( Box.prototype, faceName, {\n    get: function() {\n      return this[ _faceName ];\n    },\n    set: function( value ) {\n      this[ _faceName ] = value;\n      this.setFace( faceName, value );\n    },\n  });\n});\n\nBox.prototype.setFace = function( faceName, value ) {\n  var rectProperty = faceName + 'Rect';\n  var rect = this[ rectProperty ];\n  // remove if false\n  if ( !value ) {\n    this.removeChild( rect );\n    return;\n  }\n  // update & add face\n  var options = this.getFaceOptions( faceName );\n  options.color = typeof value == 'string' ? value : this.color;\n\n  if ( rect ) {\n    // update previous\n    rect.setOptions( options );\n  } else {\n    // create new\n    rect = this[ rectProperty ] = new BoxRect( options );\n  }\n  rect.updatePath();\n  this.addChild( rect );\n};\n\nBox.prototype.getFaceOptions = function( faceName ) {\n  return {\n    frontFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: this.depth/2 },\n    },\n    rearFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: -this.depth/2 },\n      rotate: { y: TAU/2 },\n    },\n    leftFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: -this.width/2 },\n      rotate: { y: -TAU/4 },\n    },\n    rightFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: this.width/2 },\n      rotate: { y: TAU/4 },\n    },\n    topFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: -this.height/2 },\n      rotate: { x: -TAU/4 },\n    },\n    bottomFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: this.height/2 },\n      rotate: { x: TAU/4 },\n    },\n  }[ faceName ];\n};\n\n// ----- set face properties ----- //\n\nvar childProperties = [ 'color', 'stroke', 'fill', 'backface', 'front',\n  'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Box.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      faceNames.forEach( function( faceName ) {\n        var rect = this[ faceName + 'Rect' ];\n        var isFaceColor = typeof this[ faceName ] == 'string';\n        var isColorUnderwrite = property == 'color' && isFaceColor;\n        if ( rect && !isColorUnderwrite ) {\n          rect[ property ] = value;\n        }\n      }, this );\n    },\n  });\n});\n\nreturn Box;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/box.js?");

/***/ }),

/***/ "./node_modules/zdog/js/canvas-renderer.js":
/*!*************************************************!*\
  !*** ./node_modules/zdog/js/canvas-renderer.js ***!
  \*************************************************/
/***/ (function(module) {

eval("/**\n * CanvasRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.CanvasRenderer = factory();\n  }\n}( this, function factory() {\n\nvar CanvasRenderer = { isCanvas: true };\n\nCanvasRenderer.begin = function( ctx ) {\n  ctx.beginPath();\n};\n\nCanvasRenderer.move = function( ctx, elem, point ) {\n  ctx.moveTo( point.x, point.y );\n};\n\nCanvasRenderer.line = function( ctx, elem, point ) {\n  ctx.lineTo( point.x, point.y );\n};\n\nCanvasRenderer.bezier = function( ctx, elem, cp0, cp1, end ) {\n  ctx.bezierCurveTo( cp0.x, cp0.y, cp1.x, cp1.y, end.x, end.y );\n};\n\nCanvasRenderer.closePath = function( ctx ) {\n  ctx.closePath();\n};\n\nCanvasRenderer.setPath = function() {};\n\nCanvasRenderer.renderPath = function( ctx, elem, pathCommands, isClosed ) {\n  this.begin( ctx, elem );\n  pathCommands.forEach( function( command ) {\n    command.render( ctx, elem, CanvasRenderer );\n  });\n  if ( isClosed ) {\n    this.closePath( ctx, elem );\n  }\n};\n\nCanvasRenderer.stroke = function( ctx, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.stroke();\n};\n\nCanvasRenderer.fill = function( ctx, elem, isFill, color ) {\n  if ( !isFill ) {\n    return;\n  }\n  ctx.fillStyle = color;\n  ctx.fill();\n};\n\nCanvasRenderer.end = function() {};\n\nreturn CanvasRenderer;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/canvas-renderer.js?");

/***/ }),

/***/ "./node_modules/zdog/js/cone.js":
/*!**************************************!*\
  !*** ./node_modules/zdog/js/cone.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Cone composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./vector */ \"./node_modules/zdog/js/vector.js\"),\n        __webpack_require__(/*! ./path-command */ \"./node_modules/zdog/js/path-command.js\"), __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\"), __webpack_require__(/*! ./ellipse */ \"./node_modules/zdog/js/ellipse.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cone = factory( Zdog, Zdog.Vector, Zdog.PathCommand,\n        Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor, Ellipse ) {\n\nvar Cone = Ellipse.subclass({\n  length: 1,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCone.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.length },\n  });\n\n  // vectors used for calculation\n  this.renderApex = new Vector();\n  this.renderCentroid = new Vector();\n  this.tangentA = new Vector();\n  this.tangentB = new Vector();\n\n  this.surfacePathCommands = [\n    new PathCommand( 'move', [ {} ] ), // points set in renderConeSurface\n    new PathCommand( 'line', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCone.prototype.updateSortValue = function() {\n  // center of cone is one third of its length\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 1/3 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nCone.prototype.render = function( ctx, renderer ) {\n  this.renderConeSurface( ctx, renderer );\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nCone.prototype.renderConeSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  this.renderApex.set( this.apex.renderOrigin )\n    .subtract( this.renderOrigin );\n\n  var scale = this.renderNormal.magnitude();\n  var apexDistance = this.renderApex.magnitude2d();\n  var normalDistance = this.renderNormal.magnitude2d();\n  // eccentricity\n  var eccenAngle = Math.acos( normalDistance / scale );\n  var eccen = Math.sin( eccenAngle );\n  var radius = this.diameter/2 * scale;\n  // does apex extend beyond eclipse of face\n  var isApexVisible = radius * eccen < apexDistance;\n  if ( !isApexVisible ) {\n    return;\n  }\n  // update tangents\n  var apexAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x ) +\n      TAU/2;\n  var projectLength = apexDistance / eccen;\n  var projectAngle = Math.acos( radius / projectLength );\n  // set tangent points\n  var tangentA = this.tangentA;\n  var tangentB = this.tangentB;\n\n  tangentA.x = Math.cos( projectAngle ) * radius * eccen;\n  tangentA.y = Math.sin( projectAngle ) * radius;\n\n  tangentB.set( this.tangentA );\n  tangentB.y *= -1;\n\n  tangentA.rotateZ( apexAngle );\n  tangentB.rotateZ( apexAngle );\n  tangentA.add( this.renderOrigin );\n  tangentB.add( this.renderOrigin );\n\n  this.setSurfaceRenderPoint( 0, tangentA );\n  this.setSurfaceRenderPoint( 1, this.apex.renderOrigin );\n  this.setSurfaceRenderPoint( 2, tangentB );\n\n  // render\n  var elem = this.getSurfaceRenderElement( ctx, renderer );\n  renderer.renderPath( ctx, elem, this.surfacePathCommands );\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCone.prototype.getSurfaceRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.surfaceSvgElement ) {\n    // create svgElement\n    this.surfaceSvgElement = document.createElementNS( svgURI, 'path');\n    this.surfaceSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.surfaceSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.surfaceSvgElement;\n};\n\nCone.prototype.setSurfaceRenderPoint = function( index, point ) {\n  var renderPoint = this.surfacePathCommands[ index ].renderPoints[0];\n  renderPoint.set( point );\n};\n\nreturn Cone;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/cone.js?");

/***/ }),

/***/ "./node_modules/zdog/js/cylinder.js":
/*!******************************************!*\
  !*** ./node_modules/zdog/js/cylinder.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Cylinder composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"),\n        __webpack_require__(/*! ./path-command */ \"./node_modules/zdog/js/path-command.js\"), __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\"), __webpack_require__(/*! ./group */ \"./node_modules/zdog/js/group.js\"),\n        __webpack_require__(/*! ./ellipse */ \"./node_modules/zdog/js/ellipse.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cylinder = factory( Zdog, Zdog.PathCommand, Zdog.Shape,\n        Zdog.Group, Zdog.Ellipse );\n  }\n}( this, function factory( utils, PathCommand, Shape, Group, Ellipse ) {\n\nfunction noop() {}\n\n// ----- CylinderGroup ----- //\n\nvar CylinderGroup = Group.subclass({\n  color: '#333',\n  updateSort: true,\n});\n\nCylinderGroup.prototype.create = function() {\n  Group.prototype.create.apply( this, arguments );\n  this.pathCommands = [\n    new PathCommand( 'move', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCylinderGroup.prototype.render = function( ctx, renderer ) {\n  this.renderCylinderSurface( ctx, renderer );\n  Group.prototype.render.apply( this, arguments );\n};\n\nCylinderGroup.prototype.renderCylinderSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  // render cylinder surface\n  var elem = this.getRenderElement( ctx, renderer );\n  var frontBase = this.frontBase;\n  var rearBase = this.rearBase;\n  var scale = frontBase.renderNormal.magnitude();\n  var strokeWidth = frontBase.diameter * scale + frontBase.getLineWidth();\n  // set path command render points\n  this.pathCommands[0].renderPoints[0].set( frontBase.renderOrigin );\n  this.pathCommands[1].renderPoints[0].set( rearBase.renderOrigin );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'butt'; // nice\n  }\n  renderer.renderPath( ctx, elem, this.pathCommands );\n  renderer.stroke( ctx, elem, true, this.color, strokeWidth );\n  renderer.end( ctx, elem );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'round'; // reset\n  }\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCylinderGroup.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n  }\n  return this.svgElement;\n};\n\n// prevent double-creation in parent.copyGraph()\n// only create in Cylinder.create()\nCylinderGroup.prototype.copyGraph = noop;\n\n// ----- CylinderEllipse ----- //\n\nvar CylinderEllipse = Ellipse.subclass();\n\nCylinderEllipse.prototype.copyGraph = noop;\n\n// ----- Cylinder ----- //\n\nvar Cylinder = Shape.subclass({\n  diameter: 1,\n  length: 1,\n  frontFace: undefined,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCylinder.prototype.create = function(/* options */) {\n  // call super\n  Shape.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  // CylinderGroup to render cylinder surface then bases\n  this.group = new CylinderGroup({\n    addTo: this,\n    color: this.color,\n    visible: this.visible,\n  });\n  var baseZ = this.length/2;\n  var baseColor = this.backface || true;\n  // front outside base\n  this.frontBase = this.group.frontBase = new Ellipse({\n    addTo: this.group,\n    diameter: this.diameter,\n    translate: { z: baseZ },\n    rotate: { y: TAU/2 },\n    color: this.color,\n    stroke: this.stroke,\n    fill: this.fill,\n    backface: this.frontFace || baseColor,\n    visible: this.visible,\n  });\n  // back outside base\n  this.rearBase = this.group.rearBase = this.frontBase.copy({\n    translate: { z: -baseZ },\n    rotate: { y: 0 },\n    backface: baseColor,\n  });\n};\n\n// Cylinder shape does not render anything\nCylinder.prototype.render = function() {};\n\n// ----- set child properties ----- //\n\nvar childProperties = [ 'stroke', 'fill', 'color', 'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Cylinder.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      // set property on children\n      if ( this.frontBase ) {\n        this.frontBase[ property ] = value;\n        this.rearBase[ property ] = value;\n        this.group[ property ] = value;\n      }\n    },\n  });\n});\n\n// TODO child property setter for backface, frontBaseColor, & rearBaseColor\n\nreturn Cylinder;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/cylinder.js?");

/***/ }),

/***/ "./node_modules/zdog/js/dragger.js":
/*!*****************************************!*\
  !*** ./node_modules/zdog/js/dragger.js ***!
  \*****************************************/
/***/ (function(module) {

eval("/**\n * Dragger\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.Dragger = factory();\n  }\n}( this, function factory() {\n\n// quick & dirty drag event stuff\n// messes up if multiple pointers/touches\n\n// check for browser window #85\nvar hasWindow = typeof window != 'undefined';\n// event support, default to mouse events\nvar downEvent = 'mousedown';\nvar moveEvent = 'mousemove';\nvar upEvent = 'mouseup';\nif ( hasWindow ) {\n  if ( window.PointerEvent ) {\n    // PointerEvent, Chrome\n    downEvent = 'pointerdown';\n    moveEvent = 'pointermove';\n    upEvent = 'pointerup';\n  } else if ( 'ontouchstart' in window ) {\n    // Touch Events, iOS Safari\n    downEvent = 'touchstart';\n    moveEvent = 'touchmove';\n    upEvent = 'touchend';\n  }\n}\n\nfunction noop() {}\n\nfunction Dragger( options ) {\n  this.create( options || {} );\n}\n\nDragger.prototype.create = function( options ) {\n  this.onDragStart = options.onDragStart || noop;\n  this.onDragMove = options.onDragMove || noop;\n  this.onDragEnd = options.onDragEnd || noop;\n\n  this.bindDrag( options.startElement );\n};\n\nDragger.prototype.bindDrag = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    return;\n  }\n  // disable browser gestures #53\n  element.style.touchAction = 'none';\n  element.addEventListener( downEvent, this );\n};\n\nDragger.prototype.getQueryElement = function( element ) {\n  if ( typeof element == 'string' ) {\n    // with string, query selector\n    element = document.querySelector( element );\n  }\n  return element;\n};\n\nDragger.prototype.handleEvent = function( event ) {\n  var method = this[ 'on' + event.type ];\n  if ( method ) {\n    method.call( this, event );\n  }\n};\n\nDragger.prototype.onmousedown =\nDragger.prototype.onpointerdown = function( event ) {\n  this.dragStart( event, event );\n};\n\nDragger.prototype.ontouchstart = function( event ) {\n  this.dragStart( event, event.changedTouches[0] );\n};\n\nDragger.prototype.dragStart = function( event, pointer ) {\n  event.preventDefault();\n  this.dragStartX = pointer.pageX;\n  this.dragStartY = pointer.pageY;\n  if ( hasWindow ) {\n    window.addEventListener( moveEvent, this );\n    window.addEventListener( upEvent, this );\n  }\n  this.onDragStart( pointer );\n};\n\nDragger.prototype.ontouchmove = function( event ) {\n  // HACK, moved touch may not be first\n  this.dragMove( event, event.changedTouches[0] );\n};\n\nDragger.prototype.onmousemove =\nDragger.prototype.onpointermove = function( event ) {\n  this.dragMove( event, event );\n};\n\nDragger.prototype.dragMove = function( event, pointer ) {\n  event.preventDefault();\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  this.onDragMove( pointer, moveX, moveY );\n};\n\nDragger.prototype.onmouseup =\nDragger.prototype.onpointerup =\nDragger.prototype.ontouchend =\nDragger.prototype.dragEnd = function(/* event */) {\n  window.removeEventListener( moveEvent, this );\n  window.removeEventListener( upEvent, this );\n  this.onDragEnd();\n};\n\nreturn Dragger;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/dragger.js?");

/***/ }),

/***/ "./node_modules/zdog/js/ellipse.js":
/*!*****************************************!*\
  !*** ./node_modules/zdog/js/ellipse.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Ellipse\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Ellipse = factory( Zdog.Shape );\n  }\n\n}( this, function factory( Shape ) {\n\nvar Ellipse = Shape.subclass({\n  diameter: 1,\n  width: undefined,\n  height: undefined,\n  quarters: 4,\n  closed: false,\n});\n\nEllipse.prototype.setPath = function() {\n  var width = this.width != undefined ? this.width : this.diameter;\n  var height = this.height != undefined ? this.height : this.diameter;\n  var x = width / 2;\n  var y = height / 2;\n  this.path = [\n    { x: 0, y: -y },\n    { arc: [ // top right\n      { x: x, y: -y },\n      { x: x, y: 0 },\n    ]},\n  ];\n  // bottom right\n  if ( this.quarters > 1 ) {\n    this.path.push({ arc: [\n      { x: x, y: y },\n      { x: 0, y: y },\n    ]});\n  }\n  // bottom left\n  if ( this.quarters > 2 ) {\n    this.path.push({ arc: [\n      { x: -x, y: y },\n      { x: -x, y: 0 },\n    ]});\n  }\n  // top left\n  if ( this.quarters > 3 ) {\n    this.path.push({ arc: [\n      { x: -x, y: -y },\n      { x: 0, y: -y },\n    ]});\n  }\n};\n\nreturn Ellipse;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/ellipse.js?");

/***/ }),

/***/ "./node_modules/zdog/js/group.js":
/*!***************************************!*\
  !*** ./node_modules/zdog/js/group.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Group\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Group = factory( Zdog.Anchor );\n  }\n}( this, function factory( Anchor ) {\n\nvar Group = Anchor.subclass({\n  updateSort: false,\n  visible: true,\n});\n\n// ----- update ----- //\n\nGroup.prototype.updateSortValue = function() {\n  var sortValueTotal = 0;\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n    sortValueTotal += item.sortValue;\n  });\n  // average sort value of all points\n  // def not geometrically correct, but works for me\n  this.sortValue = sortValueTotal / this.flatGraph.length;\n\n  if ( this.updateSort ) {\n    this.flatGraph.sort( Anchor.shapeSorter );\n  }\n};\n\n// ----- render ----- //\n\nGroup.prototype.render = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, renderer );\n  });\n};\n\n// actual group flatGraph only used inside group\nGroup.prototype.updateFlatGraph = function() {\n  // do not include self\n  var flatGraph = [];\n  this.flatGraph = this.addChildFlatGraph( flatGraph );\n};\n\n// do not include children, group handles rendering & sorting internally\nGroup.prototype.getFlatGraph = function() {\n  return [ this ];\n};\n\nreturn Group;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/group.js?");

/***/ }),

/***/ "./node_modules/zdog/js/hemisphere.js":
/*!********************************************!*\
  !*** ./node_modules/zdog/js/hemisphere.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Hemisphere composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./vector */ \"./node_modules/zdog/js/vector.js\"),\n        __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\"), __webpack_require__(/*! ./ellipse */ \"./node_modules/zdog/js/ellipse.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Hemisphere = factory( Zdog, Zdog.Vector, Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, Anchor, Ellipse ) {\n\nvar Hemisphere = Ellipse.subclass({\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nHemisphere.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.diameter/2 },\n  });\n  // vector used for calculation\n  this.renderCentroid = new Vector();\n};\n\nHemisphere.prototype.updateSortValue = function() {\n  // centroid of hemisphere is 3/8 between origin and apex\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 3/8 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nHemisphere.prototype.render = function( ctx, renderer ) {\n  this.renderDome( ctx, renderer );\n  // call super\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nHemisphere.prototype.renderDome = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  var elem = this.getDomeRenderElement( ctx, renderer );\n  var contourAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x );\n  var domeRadius = this.diameter/2 * this.renderNormal.magnitude();\n  var x = this.renderOrigin.x;\n  var y = this.renderOrigin.y;\n\n  if ( renderer.isCanvas ) {\n    // canvas\n    var startAngle = contourAngle + TAU/4;\n    var endAngle = contourAngle - TAU/4;\n    ctx.beginPath();\n    ctx.arc( x, y, domeRadius, startAngle, endAngle );\n  } else if ( renderer.isSvg ) {\n    // svg\n    contourAngle = (contourAngle - TAU/4) / TAU * 360;\n    this.domeSvgElement.setAttribute( 'd', 'M ' + -domeRadius + ',0 A ' +\n        domeRadius + ',' + domeRadius + ' 0 0 1 ' + domeRadius + ',0' );\n    this.domeSvgElement.setAttribute( 'transform',\n        'translate(' + x + ',' + y + ' ) rotate(' + contourAngle + ')' );\n  }\n\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nHemisphere.prototype.getDomeRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.domeSvgElement ) {\n    // create svgElement\n    this.domeSvgElement = document.createElementNS( svgURI, 'path');\n    this.domeSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.domeSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.domeSvgElement;\n};\n\nreturn Hemisphere;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/hemisphere.js?");

/***/ }),

/***/ "./node_modules/zdog/js/illustration.js":
/*!**********************************************!*\
  !*** ./node_modules/zdog/js/illustration.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Illustration\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\"),\n        __webpack_require__(/*! ./dragger */ \"./node_modules/zdog/js/dragger.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Illustration = factory( Zdog, Zdog.Anchor, Zdog.Dragger );\n  }\n}( this, function factory( utils, Anchor, Dragger ) {\n\nfunction noop() {}\nvar TAU = utils.TAU;\n\nvar Illustration = Anchor.subclass({\n  element: undefined,\n  centered: true,\n  zoom: 1,\n  dragRotate: false,\n  resize: false,\n  onPrerender: noop,\n  onDragStart: noop,\n  onDragMove: noop,\n  onDragEnd: noop,\n  onResize: noop,\n});\n\nutils.extend( Illustration.prototype, Dragger.prototype );\n\nIllustration.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  Dragger.prototype.create.call( this, options );\n  this.setElement( this.element );\n  this.setDragRotate( this.dragRotate );\n  this.setResize( this.resize );\n};\n\nIllustration.prototype.setElement = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    throw new Error( 'Zdog.Illustration element required. Set to ' + element );\n  }\n\n  var nodeName = element.nodeName.toLowerCase();\n  if ( nodeName == 'canvas' ) {\n    this.setCanvas( element );\n  } else if ( nodeName == 'svg' ) {\n    this.setSvg( element );\n  }\n};\n\nIllustration.prototype.setSize = function( width, height ) {\n  width = Math.round( width );\n  height = Math.round( height );\n  if ( this.isCanvas ) {\n    this.setSizeCanvas( width, height );\n  } else if ( this.isSvg ) {\n    this.setSizeSvg( width, height );\n  }\n};\n\nIllustration.prototype.setResize = function( resize ) {\n  this.resize = resize;\n  // create resize event listener\n  if ( !this.resizeListener ) {\n    this.resizeListener = this.onWindowResize.bind( this );\n  }\n  // add/remove event listener\n  if ( resize ) {\n    window.addEventListener( 'resize', this.resizeListener );\n    this.onWindowResize();\n  } else {\n    window.removeEventListener( 'resize', this.resizeListener );\n  }\n};\n\n// TODO debounce this?\nIllustration.prototype.onWindowResize = function() {\n  this.setMeasuredSize();\n  this.onResize( this.width, this.height );\n};\n\nIllustration.prototype.setMeasuredSize = function() {\n  var width, height;\n  var isFullscreen = this.resize == 'fullscreen';\n  if ( isFullscreen ) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n  } else {\n    var rect = this.element.getBoundingClientRect();\n    width = rect.width;\n    height = rect.height;\n  }\n  this.setSize( width, height );\n};\n\n// ----- render ----- //\n\nIllustration.prototype.renderGraph = function( item ) {\n  if ( this.isCanvas ) {\n    this.renderGraphCanvas( item );\n  } else if ( this.isSvg ) {\n    this.renderGraphSvg( item );\n  }\n};\n\n// combo method\nIllustration.prototype.updateRenderGraph = function( item ) {\n  this.updateGraph();\n  this.renderGraph( item );\n};\n\n// ----- canvas ----- //\n\nIllustration.prototype.setCanvas = function( element ) {\n  this.element = element;\n  this.isCanvas = true;\n  // update related properties\n  this.ctx = this.element.getContext('2d');\n  // set initial size\n  this.setSizeCanvas( element.width, element.height );\n};\n\nIllustration.prototype.setSizeCanvas = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  // up-rez for hi-DPI devices\n  var pixelRatio = this.pixelRatio = window.devicePixelRatio || 1;\n  this.element.width = this.canvasWidth = width * pixelRatio;\n  this.element.height = this.canvasHeight = height * pixelRatio;\n  var needsHighPixelRatioSizing = pixelRatio > 1 && !this.resize;\n  if ( needsHighPixelRatioSizing ) {\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n  }\n};\n\nIllustration.prototype.renderGraphCanvas = function( item ) {\n  item = item || this;\n  this.prerenderCanvas();\n  Anchor.prototype.renderGraphCanvas.call( item, this.ctx );\n  this.postrenderCanvas();\n};\n\nIllustration.prototype.prerenderCanvas = function() {\n  var ctx = this.ctx;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  ctx.clearRect( 0, 0, this.canvasWidth, this.canvasHeight );\n  ctx.save();\n  if ( this.centered ) {\n    var centerX = this.width/2 * this.pixelRatio;\n    var centerY = this.height/2 * this.pixelRatio;\n    ctx.translate( centerX, centerY );\n  }\n  var scale = this.pixelRatio * this.zoom;\n  ctx.scale( scale, scale );\n  this.onPrerender( ctx );\n};\n\nIllustration.prototype.postrenderCanvas = function() {\n  this.ctx.restore();\n};\n\n// ----- svg ----- //\n\nIllustration.prototype.setSvg = function( element ) {\n  this.element = element;\n  this.isSvg = true;\n  this.pixelRatio = 1;\n  // set initial size from width & height attributes\n  var width = element.getAttribute('width');\n  var height = element.getAttribute('height');\n  this.setSizeSvg( width, height );\n};\n\nIllustration.prototype.setSizeSvg = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  var viewWidth = width / this.zoom;\n  var viewHeight = height / this.zoom;\n  var viewX = this.centered ? -viewWidth/2 : 0;\n  var viewY = this.centered ? -viewHeight/2 : 0;\n  this.element.setAttribute( 'viewBox', viewX + ' ' + viewY + ' ' +\n    viewWidth + ' ' + viewHeight );\n  if ( this.resize ) {\n    // remove size attributes, let size be determined by viewbox\n    this.element.removeAttribute('width');\n    this.element.removeAttribute('height');\n  } else {\n    this.element.setAttribute( 'width', width );\n    this.element.setAttribute( 'height', height );\n  }\n};\n\nIllustration.prototype.renderGraphSvg = function( item ) {\n  item = item || this;\n  empty( this.element );\n  this.onPrerender( this.element );\n  Anchor.prototype.renderGraphSvg.call( item, this.element );\n};\n\nfunction empty( element ) {\n  while ( element.firstChild ) {\n    element.removeChild( element.firstChild );\n  }\n}\n\n// ----- drag ----- //\n\nIllustration.prototype.setDragRotate = function( item ) {\n  if ( !item ) {\n    return;\n  } else if ( item === true ) {\n    /* eslint consistent-this: \"off\" */\n    item = this;\n  }\n  this.dragRotate = item;\n\n  this.bindDrag( this.element );\n};\n\nIllustration.prototype.dragStart = function(/* event, pointer */) {\n  this.dragStartRX = this.dragRotate.rotate.x;\n  this.dragStartRY = this.dragRotate.rotate.y;\n  Dragger.prototype.dragStart.apply( this, arguments );\n};\n\nIllustration.prototype.dragMove = function( event, pointer ) {\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  var displaySize = Math.min( this.width, this.height );\n  var moveRY = moveX / displaySize * TAU;\n  var moveRX = moveY / displaySize * TAU;\n  this.dragRotate.rotate.x = this.dragStartRX - moveRX;\n  this.dragRotate.rotate.y = this.dragStartRY - moveRY;\n  Dragger.prototype.dragMove.apply( this, arguments );\n};\n\nreturn Illustration;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/illustration.js?");

/***/ }),

/***/ "./node_modules/zdog/js/index.js":
/*!***************************************!*\
  !*** ./node_modules/zdog/js/index.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Index\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"),\n        __webpack_require__(/*! ./canvas-renderer */ \"./node_modules/zdog/js/canvas-renderer.js\"),\n        __webpack_require__(/*! ./svg-renderer */ \"./node_modules/zdog/js/svg-renderer.js\"),\n        __webpack_require__(/*! ./vector */ \"./node_modules/zdog/js/vector.js\"),\n        __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\"),\n        __webpack_require__(/*! ./dragger */ \"./node_modules/zdog/js/dragger.js\"),\n        __webpack_require__(/*! ./illustration */ \"./node_modules/zdog/js/illustration.js\"),\n        __webpack_require__(/*! ./path-command */ \"./node_modules/zdog/js/path-command.js\"),\n        __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\"),\n        __webpack_require__(/*! ./group */ \"./node_modules/zdog/js/group.js\"),\n        __webpack_require__(/*! ./rect */ \"./node_modules/zdog/js/rect.js\"),\n        __webpack_require__(/*! ./rounded-rect */ \"./node_modules/zdog/js/rounded-rect.js\"),\n        __webpack_require__(/*! ./ellipse */ \"./node_modules/zdog/js/ellipse.js\"),\n        __webpack_require__(/*! ./polygon */ \"./node_modules/zdog/js/polygon.js\"),\n        __webpack_require__(/*! ./hemisphere */ \"./node_modules/zdog/js/hemisphere.js\"),\n        __webpack_require__(/*! ./cylinder */ \"./node_modules/zdog/js/cylinder.js\"),\n        __webpack_require__(/*! ./cone */ \"./node_modules/zdog/js/cone.js\"),\n        __webpack_require__(/*! ./box */ \"./node_modules/zdog/js/box.js\")\n    );\n  } else if ( true ) {\n    /* globals define */ // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (root.Zdog),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n})( this, function factory( Zdog, CanvasRenderer, SvgRenderer, Vector, Anchor,\n    Dragger, Illustration, PathCommand, Shape, Group, Rect, RoundedRect,\n    Ellipse, Polygon, Hemisphere, Cylinder, Cone, Box ) {\n\n      Zdog.CanvasRenderer = CanvasRenderer;\n      Zdog.SvgRenderer = SvgRenderer;\n      Zdog.Vector = Vector;\n      Zdog.Anchor = Anchor;\n      Zdog.Dragger = Dragger;\n      Zdog.Illustration = Illustration;\n      Zdog.PathCommand = PathCommand;\n      Zdog.Shape = Shape;\n      Zdog.Group = Group;\n      Zdog.Rect = Rect;\n      Zdog.RoundedRect = RoundedRect;\n      Zdog.Ellipse = Ellipse;\n      Zdog.Polygon = Polygon;\n      Zdog.Hemisphere = Hemisphere;\n      Zdog.Cylinder = Cylinder;\n      Zdog.Cone = Cone;\n      Zdog.Box = Box;\n\n      return Zdog;\n});\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/index.js?");

/***/ }),

/***/ "./node_modules/zdog/js/path-command.js":
/*!**********************************************!*\
  !*** ./node_modules/zdog/js/path-command.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * PathCommand\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./vector */ \"./node_modules/zdog/js/vector.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.PathCommand = factory( Zdog.Vector );\n  }\n}( this, function factory( Vector ) {\n\nfunction PathCommand( method, points, previousPoint ) {\n  this.method = method;\n  this.points = points.map( mapVectorPoint );\n  this.renderPoints = points.map( mapNewVector );\n  this.previousPoint = previousPoint;\n  this.endRenderPoint = this.renderPoints[ this.renderPoints.length - 1 ];\n  // arc actions come with previous point & corner point\n  // but require bezier control points\n  if ( method == 'arc' ) {\n    this.controlPoints = [ new Vector(), new Vector() ];\n  }\n}\n\nfunction mapVectorPoint( point ) {\n  if ( point instanceof Vector ) {\n    return point;\n  } else {\n    return new Vector( point );\n  }\n}\n\nfunction mapNewVector( point ) {\n  return new Vector( point );\n}\n\nPathCommand.prototype.reset = function() {\n  // reset renderPoints back to orignal points position\n  var points = this.points;\n  this.renderPoints.forEach( function( renderPoint, i ) {\n    var point = points[i];\n    renderPoint.set( point );\n  });\n};\n\nPathCommand.prototype.transform = function( translation, rotation, scale ) {\n  this.renderPoints.forEach( function( renderPoint ) {\n    renderPoint.transform( translation, rotation, scale );\n  });\n};\n\nPathCommand.prototype.render = function( ctx, elem, renderer ) {\n  return this[ this.method ]( ctx, elem, renderer );\n};\n\nPathCommand.prototype.move = function( ctx, elem, renderer ) {\n  return renderer.move( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.line = function( ctx, elem, renderer ) {\n  return renderer.line( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.bezier = function( ctx, elem, renderer ) {\n  var cp0 = this.renderPoints[0];\n  var cp1 = this.renderPoints[1];\n  var end = this.renderPoints[2];\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nvar arcHandleLength = 9/16;\n\nPathCommand.prototype.arc = function( ctx, elem, renderer ) {\n  var prev = this.previousPoint;\n  var corner = this.renderPoints[0];\n  var end = this.renderPoints[1];\n  var cp0 = this.controlPoints[0];\n  var cp1 = this.controlPoints[1];\n  cp0.set( prev ).lerp( corner, arcHandleLength );\n  cp1.set( end ).lerp( corner, arcHandleLength );\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nreturn PathCommand;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/path-command.js?");

/***/ }),

/***/ "./node_modules/zdog/js/polygon.js":
/*!*****************************************!*\
  !*** ./node_modules/zdog/js/polygon.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Polygon = factory( Zdog, Zdog.Shape );\n  }\n}( this, function factory( utils, Shape ) {\n\nvar Polygon = Shape.subclass({\n  sides: 3,\n  radius: 0.5,\n});\n\nvar TAU = utils.TAU;\n\nPolygon.prototype.setPath = function() {\n  this.path = [];\n  for ( var i=0; i < this.sides; i++ ) {\n    var theta = i/this.sides * TAU - TAU/4;\n    var x = Math.cos( theta ) * this.radius;\n    var y = Math.sin( theta ) * this.radius;\n    this.path.push({ x: x, y: y });\n  }\n};\n\nreturn Polygon;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/polygon.js?");

/***/ }),

/***/ "./node_modules/zdog/js/rect.js":
/*!**************************************!*\
  !*** ./node_modules/zdog/js/rect.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Rect\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Rect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar Rect = Shape.subclass({\n  width: 1,\n  height: 1,\n});\n\nRect.prototype.setPath = function() {\n  var x = this.width / 2;\n  var y = this.height / 2;\n  /* eslint key-spacing: \"off\" */\n  this.path = [\n    { x: -x, y: -y },\n    { x:  x, y: -y },\n    { x:  x, y:  y },\n    { x: -x, y:  y },\n  ];\n};\n\nreturn Rect;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/rect.js?");

/***/ }),

/***/ "./node_modules/zdog/js/rounded-rect.js":
/*!**********************************************!*\
  !*** ./node_modules/zdog/js/rounded-rect.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * RoundedRect\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./shape */ \"./node_modules/zdog/js/shape.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.RoundedRect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar RoundedRect = Shape.subclass({\n  width: 1,\n  height: 1,\n  cornerRadius: 0.25,\n  closed: false,\n});\n\nRoundedRect.prototype.setPath = function() {\n  /* eslint\n     id-length: [ \"error\", { \"min\": 2, \"exceptions\": [ \"x\", \"y\" ] }],\n     key-spacing: \"off\" */\n  var xA = this.width / 2;\n  var yA = this.height / 2;\n  var shortSide = Math.min( xA, yA );\n  var cornerRadius = Math.min( this.cornerRadius, shortSide );\n  var xB = xA - cornerRadius;\n  var yB = yA - cornerRadius;\n  var path = [\n    // top right corner\n    { x: xB, y: -yA },\n    { arc: [\n      { x: xA, y: -yA },\n      { x: xA, y: -yB },\n    ]},\n  ];\n  // bottom right corner\n  if ( yB ) {\n    path.push({ x: xA, y: yB });\n  }\n  path.push({ arc: [\n    { x: xA, y:  yA },\n    { x: xB, y:  yA },\n  ]});\n  // bottom left corner\n  if ( xB ) {\n    path.push({ x: -xB, y: yA });\n  }\n  path.push({ arc: [\n    { x: -xA, y:  yA },\n    { x: -xA, y:  yB },\n  ]});\n  // top left corner\n  if ( yB ) {\n    path.push({ x: -xA, y: -yB });\n  }\n  path.push({ arc: [\n    { x: -xA, y: -yA },\n    { x: -xB, y: -yA },\n  ]});\n\n  // back to top right corner\n  if ( xB ) {\n    path.push({ x: xB, y: -yA });\n  }\n\n  this.path = path;\n};\n\nreturn RoundedRect;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/rounded-rect.js?");

/***/ }),

/***/ "./node_modules/zdog/js/shape.js":
/*!***************************************!*\
  !*** ./node_modules/zdog/js/shape.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\"), __webpack_require__(/*! ./vector */ \"./node_modules/zdog/js/vector.js\"),\n        __webpack_require__(/*! ./path-command */ \"./node_modules/zdog/js/path-command.js\"), __webpack_require__(/*! ./anchor */ \"./node_modules/zdog/js/anchor.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Shape = factory( Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor ) {\n\nvar Shape = Anchor.subclass({\n  stroke: 1,\n  fill: false,\n  color: '#333',\n  closed: true,\n  visible: true,\n  path: [ {} ],\n  front: { z: 1 },\n  backface: true,\n});\n\nShape.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // front\n  this.front = new Vector( options.front || this.front );\n  this.renderFront = new Vector( this.front );\n  this.renderNormal = new Vector();\n};\n\nvar actionNames = [\n  'move',\n  'line',\n  'bezier',\n  'arc',\n];\n\nShape.prototype.updatePath = function() {\n  this.setPath();\n  this.updatePathCommands();\n};\n\n// place holder for Ellipse, Rect, etc.\nShape.prototype.setPath = function() {};\n\n// parse path into PathCommands\nShape.prototype.updatePathCommands = function() {\n  var previousPoint;\n  this.pathCommands = this.path.map( function( pathPart, i ) {\n    // pathPart can be just vector coordinates -> { x, y, z }\n    // or path instruction -> { arc: [ {x0,y0,z0}, {x1,y1,z1} ] }\n    var keys = Object.keys( pathPart );\n    var method = keys[0];\n    var points = pathPart[ method ];\n    // default to line if no instruction\n    var isInstruction = keys.length == 1 && actionNames.indexOf( method ) != -1;\n    if ( !isInstruction ) {\n      method = 'line';\n      points = pathPart;\n    }\n    // munge single-point methods like line & move without arrays\n    var isLineOrMove = method == 'line' || method == 'move';\n    var isPointsArray = Array.isArray( points );\n    if ( isLineOrMove && !isPointsArray ) {\n      points = [ points ];\n    }\n\n    // first action is always move\n    method = i === 0 ? 'move' : method;\n    // arcs require previous last point\n    var command = new PathCommand( method, points, previousPoint );\n    // update previousLastPoint\n    previousPoint = command.endRenderPoint;\n    return command;\n  });\n};\n\n// ----- update ----- //\n\nShape.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n  this.renderFront.set( this.front );\n  // reset command render points\n  this.pathCommands.forEach( function( command ) {\n    command.reset();\n  });\n};\n\nShape.prototype.transform = function( translation, rotation, scale ) {\n  // calculate render points backface visibility & cone/hemisphere shapes\n  this.renderOrigin.transform( translation, rotation, scale );\n  this.renderFront.transform( translation, rotation, scale );\n  this.renderNormal.set( this.renderOrigin ).subtract( this.renderFront );\n  // transform points\n  this.pathCommands.forEach( function( command ) {\n    command.transform( translation, rotation, scale );\n  });\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nShape.prototype.updateSortValue = function() {\n  // sort by average z of all points\n  // def not geometrically correct, but works for me\n  var pointCount = this.pathCommands.length;\n  var firstPoint = this.pathCommands[0].endRenderPoint;\n  var lastPoint = this.pathCommands[ pointCount - 1 ].endRenderPoint;\n  // ignore the final point if self closing shape\n  var isSelfClosing = pointCount > 2 && firstPoint.isSame( lastPoint );\n  if ( isSelfClosing ) {\n    pointCount -= 1;\n  }\n\n  var sortValueTotal = 0;\n  for ( var i = 0; i < pointCount; i++ ) {\n    sortValueTotal += this.pathCommands[i].endRenderPoint.z;\n  }\n  this.sortValue = sortValueTotal / pointCount;\n};\n\n// ----- render ----- //\n\nShape.prototype.render = function( ctx, renderer ) {\n  var length = this.pathCommands.length;\n  if ( !this.visible || !length ) {\n    return;\n  }\n  // do not render if hiding backface\n  this.isFacingBack = this.renderNormal.z > 0;\n  if ( !this.backface && this.isFacingBack ) {\n    return;\n  }\n  if ( !renderer ) {\n    throw new Error( 'Zdog renderer required. Set to ' + renderer );\n  }\n  // render dot or path\n  var isDot = length == 1;\n  if ( renderer.isCanvas && isDot ) {\n    this.renderCanvasDot( ctx, renderer );\n  } else {\n    this.renderPath( ctx, renderer );\n  }\n};\n\nvar TAU = utils.TAU;\n// Safari does not render lines with no size, have to render circle instead\nShape.prototype.renderCanvasDot = function( ctx ) {\n  var lineWidth = this.getLineWidth();\n  if ( !lineWidth ) {\n    return;\n  }\n  ctx.fillStyle = this.getRenderColor();\n  var point = this.pathCommands[0].endRenderPoint;\n  ctx.beginPath();\n  var radius = lineWidth/2;\n  ctx.arc( point.x, point.y, radius, 0, TAU );\n  ctx.fill();\n};\n\nShape.prototype.getLineWidth = function() {\n  if ( !this.stroke ) {\n    return 0;\n  }\n  if ( this.stroke == true ) {\n    return 1;\n  }\n  return this.stroke;\n};\n\nShape.prototype.getRenderColor = function() {\n  // use backface color if applicable\n  var isBackfaceColor = typeof this.backface == 'string' && this.isFacingBack;\n  var color = isBackfaceColor ? this.backface : this.color;\n  return color;\n};\n\nShape.prototype.renderPath = function( ctx, renderer ) {\n  var elem = this.getRenderElement( ctx, renderer );\n  var isTwoPoints = this.pathCommands.length == 2 &&\n    this.pathCommands[1].method == 'line';\n  var isClosed = !isTwoPoints && this.closed;\n  var color = this.getRenderColor();\n\n  renderer.renderPath( ctx, elem, this.pathCommands, isClosed );\n  renderer.stroke( ctx, elem, this.stroke, color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nShape.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n    this.svgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.svgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.svgElement;\n};\n\nreturn Shape;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/shape.js?");

/***/ }),

/***/ "./node_modules/zdog/js/svg-renderer.js":
/*!**********************************************!*\
  !*** ./node_modules/zdog/js/svg-renderer.js ***!
  \**********************************************/
/***/ (function(module) {

eval("/**\n * SvgRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.SvgRenderer = factory();\n  }\n}( this, function factory() {\n\nvar SvgRenderer = { isSvg: true };\n\n// round path coordinates to 3 decimals\nvar round = SvgRenderer.round = function( num ) {\n  return Math.round( num * 1000 ) / 1000;\n};\n\nfunction getPointString( point ) {\n  return round( point.x ) + ',' + round( point.y ) + ' ';\n}\n\nSvgRenderer.begin = function() {};\n\nSvgRenderer.move = function( svg, elem, point ) {\n  return 'M' + getPointString( point );\n};\n\nSvgRenderer.line = function( svg, elem, point ) {\n  return 'L' + getPointString( point );\n};\n\nSvgRenderer.bezier = function( svg, elem, cp0, cp1, end ) {\n  return 'C' + getPointString( cp0 ) + getPointString( cp1 ) +\n    getPointString( end );\n};\n\nSvgRenderer.closePath = function(/* elem */) {\n  return 'Z';\n};\n\nSvgRenderer.setPath = function( svg, elem, pathValue ) {\n  elem.setAttribute( 'd', pathValue );\n};\n\nSvgRenderer.renderPath = function( svg, elem, pathCommands, isClosed ) {\n  var pathValue = '';\n  pathCommands.forEach( function( command ) {\n    pathValue += command.render( svg, elem, SvgRenderer );\n  });\n  if ( isClosed ) {\n    pathValue += this.closePath( svg, elem );\n  }\n  this.setPath( svg, elem, pathValue );\n};\n\nSvgRenderer.stroke = function( svg, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  elem.setAttribute( 'stroke', color );\n  elem.setAttribute( 'stroke-width', lineWidth );\n};\n\nSvgRenderer.fill = function( svg, elem, isFill, color ) {\n  var fillColor = isFill ? color : 'none';\n  elem.setAttribute( 'fill', fillColor );\n};\n\nSvgRenderer.end = function( svg, elem ) {\n  svg.appendChild( elem );\n};\n\nreturn SvgRenderer;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/svg-renderer.js?");

/***/ }),

/***/ "./node_modules/zdog/js/vector.js":
/*!****************************************!*\
  !*** ./node_modules/zdog/js/vector.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * Vector\n */\n\n( function( root, factory ) {\n  // module definition\n  if (  true && module.exports ) {\n    // CommonJS\n    module.exports = factory( __webpack_require__(/*! ./boilerplate */ \"./node_modules/zdog/js/boilerplate.js\") );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Vector = factory( Zdog );\n  }\n\n}( this, function factory( utils ) {\n\nfunction Vector( position ) {\n  this.set( position );\n}\n\nvar TAU = utils.TAU;\n\n// 'pos' = 'position'\nVector.prototype.set = function( pos ) {\n  this.x = pos && pos.x || 0;\n  this.y = pos && pos.y || 0;\n  this.z = pos && pos.z || 0;\n  return this;\n};\n\n// set coordinates without sanitizing\n// vec.write({ y: 2 }) only sets y coord\nVector.prototype.write = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x = pos.x != undefined ? pos.x : this.x;\n  this.y = pos.y != undefined ? pos.y : this.y;\n  this.z = pos.z != undefined ? pos.z : this.z;\n  return this;\n};\n\nVector.prototype.rotate = function( rotation ) {\n  if ( !rotation ) {\n    return;\n  }\n  this.rotateZ( rotation.z );\n  this.rotateY( rotation.y );\n  this.rotateX( rotation.x );\n  return this;\n};\n\nVector.prototype.rotateZ = function( angle ) {\n  rotateProperty( this, angle, 'x', 'y' );\n};\n\nVector.prototype.rotateX = function( angle ) {\n  rotateProperty( this, angle, 'y', 'z' );\n};\n\nVector.prototype.rotateY = function( angle ) {\n  rotateProperty( this, angle, 'x', 'z' );\n};\n\nfunction rotateProperty( vec, angle, propA, propB ) {\n  if ( !angle || angle % TAU === 0 ) {\n    return;\n  }\n  var cos = Math.cos( angle );\n  var sin = Math.sin( angle );\n  var a = vec[ propA ];\n  var b = vec[ propB ];\n  vec[ propA ] = a*cos - b*sin;\n  vec[ propB ] = b*cos + a*sin;\n}\n\nVector.prototype.isSame = function( pos ) {\n  if ( !pos ) {\n    return false;\n  }\n  return this.x === pos.x && this.y === pos.y && this.z === pos.z;\n};\n\nVector.prototype.add = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x += pos.x || 0;\n  this.y += pos.y || 0;\n  this.z += pos.z || 0;\n  return this;\n};\n\nVector.prototype.subtract = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x -= pos.x || 0;\n  this.y -= pos.y || 0;\n  this.z -= pos.z || 0;\n  return this;\n};\n\nVector.prototype.multiply = function( pos ) {\n  if ( pos == undefined ) {\n    return this;\n  }\n  // multiple all values by same number\n  if ( typeof pos == 'number' ) {\n    this.x *= pos;\n    this.y *= pos;\n    this.z *= pos;\n  } else {\n    // multiply object\n    this.x *= pos.x != undefined ? pos.x : 1;\n    this.y *= pos.y != undefined ? pos.y : 1;\n    this.z *= pos.z != undefined ? pos.z : 1;\n  }\n  return this;\n};\n\nVector.prototype.transform = function( translation, rotation, scale ) {\n  this.multiply( scale );\n  this.rotate( rotation );\n  this.add( translation );\n  return this;\n};\n\nVector.prototype.lerp = function( pos, alpha ) {\n  this.x = utils.lerp( this.x, pos.x || 0, alpha );\n  this.y = utils.lerp( this.y, pos.y || 0, alpha );\n  this.z = utils.lerp( this.z, pos.z || 0, alpha );\n  return this;\n};\n\nVector.prototype.magnitude = function() {\n  var sum = this.x*this.x + this.y*this.y + this.z*this.z;\n  return getMagnitudeSqrt( sum );\n};\n\nfunction getMagnitudeSqrt( sum ) {\n  // PERF: check if sum ~= 1 and skip sqrt\n  if ( Math.abs( sum - 1 ) < 0.00000001 ) {\n    return 1;\n  }\n  return Math.sqrt( sum );\n}\n\nVector.prototype.magnitude2d = function() {\n  var sum = this.x*this.x + this.y*this.y;\n  return getMagnitudeSqrt( sum );\n};\n\nVector.prototype.copy = function() {\n  return new Vector( this );\n};\n\nreturn Vector;\n\n}));\n\n\n//# sourceURL=webpack://todo/./node_modules/zdog/js/vector.js?");

/***/ }),

/***/ "./src/dom.js":
/*!********************!*\
  !*** ./src/dom.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"activateListeners\": () => (/* binding */ activateListeners),\n/* harmony export */   \"getAllStorage\": () => (/* binding */ getAllStorage)\n/* harmony export */ });\n/* harmony import */ var _zdog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zdog */ \"./src/zdog.js\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage */ \"./src/storage.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ \"./src/helpers.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tasks */ \"./src/tasks.js\");\n\n\n\n\n\n  /* DOM manipulation scripts */\n\n  //global variables\n    const body = document.querySelector('body'); //for our giant event listener\n    const formContainer = document.getElementById('addFormContainer');\n    let options = []; //for select dropdown menu for project folders\n\n    function makeForm() {\n        let form = document.createElement('form');\n        form.classList.add('flex', 'input-container');\n        return form;\n    }\n\n    function deleteForm() {\n        formContainer.firstChild.remove();\n    }\n\n    function makeProjectForm() {\n        deleteForm();\n        let form = makeForm();\n        form.setAttribute('id', 'newProjectForm');\n        form.innerHTML = `\n            <div class=\"input-item flex\" data-task=\"title\">\n                <label class=\"info\" for=\"title\">Title:</label>\n                <input type=\"text\" class=\"info\" id=\"title\" data-new=\"title\" name=\"title\">\n            </div>\n        `;\n        formContainer.prepend(form);\n    }\n\n    function makeTaskForm() {\n        deleteForm();\n        let form = makeForm();\n        form.setAttribute('id', 'newTaskForm');\n        form.innerHTML = `\n            <div class=\"input-item flex\" data-task=\"title\">\n                <label class=\"info\" for=\"title\">Title:</label>\n                <input type=\"text\" class=\"info\" id=\"title\" data-new=\"title\" name=\"title\">\n            </div>\n            <div class=\"input-item flex\">\n                <label class=\"info\" for=\"priority-select\">Priority:</label>\n                <select class=\"info\" name=\"priority\" id=\"priority-select\" data-new=\"priority\">\n                    <option value=\"\">Please select task priority</option>\n                    <option value=\"high\">High</option>\n                    <option value=\"med\" selected>Med</option>\n                    <option value=\"low\">Low</option>\n                </select>\n            </div>\n            <div class=\"input-item flex\" id=\"projectSelection\">\n                <label class=\"info\" for=\"projectSelect\">Project:</label>\n                <select class=\"info\" name=\"project\" id=\"projectSelect\"></select>\n            </div>\n        `;\n        formContainer.prepend(form);\n    }\n\n    function updateNav(proj) { //adding new nav list items to the dom (nav area) when a new project is made\n        const navUl = document.querySelector('#navList'); //getting the navUL dom area\n        const completed = navUl.querySelector('#completed'); //where we will insert our new title before\n        let option = document.createElement('option'); //creating new option to add to project selection element\n        option.value = proj.title; \n        option.text = proj.title;\n        options.push(option); //options array created in global scope now has new option from newly created project folder\n        let li = document.createElement('li');\n        li.innerHTML = `\n            <div class=\"navicon-container\">\n                <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                class=\"icon icon-tabler icon-tabler-circle-dashed\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"#000000\"\n                fill=\"none\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M8.56 3.69a9 9 0 0 0 -2.92 1.95\" />\n                <path d=\"M3.69 8.56a9 9 0 0 0 -.69 3.44\" />\n                <path d=\"M3.69 15.44a9 9 0 0 0 1.95 2.92\" />\n                <path d=\"M8.56 20.31a9 9 0 0 0 3.44 .69\" />\n                <path d=\"M15.44 20.31a9 9 0 0 0 2.92 -1.95\" />\n                <path d=\"M20.31 15.44a9 9 0 0 0 .69 -3.44\" />\n                <path d=\"M20.31 8.56a9 9 0 0 0 -1.95 -2.92\" />\n                <path d=\"M15.44 3.69a9 9 0 0 0 -3.44 -.69\" />\n                </svg>\n            </div>\n            <h3><a class=\"projectNav\" data-title=\"${proj.title}\">${proj.title}</a></h3>\n        `;\n        navUl.insertBefore(li, completed); //inserting that newly created li heading at the end of our project section in the nav\n        (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setNavValues)(document.querySelectorAll(`[data-title=\"${proj.title}\"]`));\n    }\n\n    function updateSelectOptions(arr) {\n        let selectOptions = document.querySelector(`select[name=\"project\"]`); //grabbing the selection options to add to it\n        arr.forEach(option => selectOptions.add(option)); //add every option in our options array to the selectOptions element in the dom\n        (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setSelectOptionValues)(arr);\n    }\n\n    function getStorage(obj) {\n        if (!localStorage[obj]) {\n            return;\n        } else {\n            if (obj === 'projects') {\n                let desiredStorage = localStorage.getItem(obj);\n                desiredStorage = JSON.parse(desiredStorage);\n                for(let [key, value] of Object.entries(desiredStorage)) {\n                    value.tasks.map(task => (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.CreateTask)(task));\n                    let existingProject = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.CreateProject)(value);\n                    _tasks__WEBPACK_IMPORTED_MODULE_3__.projects[key] = existingProject;\n                }\n            } else if (obj === 'all') {\n                let desiredStorage = localStorage.getItem(obj);\n                desiredStorage = JSON.parse(desiredStorage);\n                for(let [key, value] of Object.entries(desiredStorage)) {\n                    _tasks__WEBPACK_IMPORTED_MODULE_3__.all.push((0,_tasks__WEBPACK_IMPORTED_MODULE_3__.CreateTask)(value));\n                }\n            } else if (obj === 'completed') {\n                let desiredStorage = localStorage.getItem(obj);\n                desiredStorage = JSON.parse(desiredStorage);\n                for(let [key, value] of Object.entries(desiredStorage)) {\n                    _tasks__WEBPACK_IMPORTED_MODULE_3__.completed.push(value);\n                }\n            } else if (obj === 'navList') {\n                let desiredStorage = localStorage.getItem(obj);\n                desiredStorage = JSON.parse(desiredStorage);\n                for(let [key, value] of Object.entries(desiredStorage)) {\n                    if (_tasks__WEBPACK_IMPORTED_MODULE_3__.projects[value]) {\n                        let valueObj = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.getProject)(value);\n                        updateNav(valueObj);\n                    }\n                } \n            }\n        }\n    }\n\n    function getAllStorage() {\n        //retrieving any localStorage\n        getStorage('projects'); \n        getStorage('all');\n        getStorage('completed');\n        getStorage('navList');\n        (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.goToAll)();\n    }\n\n    function setAllStorage() {\n        (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setStorage)('projects', _tasks__WEBPACK_IMPORTED_MODULE_3__.projects);\n        (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setStorage)('all', _tasks__WEBPACK_IMPORTED_MODULE_3__.all);\n        (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setStorage)('completed', _tasks__WEBPACK_IMPORTED_MODULE_3__.completed);\n    }\n\n    \n    //event listener function\nconst activateListeners = function() {\n    (0,_zdog__WEBPACK_IMPORTED_MODULE_0__.animate)(); //zdog call\n\n    // Observe one or multiple elements\n    _helpers__WEBPACK_IMPORTED_MODULE_2__.ro.observe(document.querySelector('html'));\n\n    body.addEventListener('click', (e) => {\n        let target = e.target;\n        switch (true) {\n            case (target.id === 'hamburger-container'): //user clicks on hamburger icon (this only occurs on smaller screen devices)\n                (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.toggleNav)();\n                break;\n            case (target.id === 'addFolderButton' || target.id === 'addProject'): { //user is creating a new project folder\n                    makeProjectForm();\n                    formContainer.classList.remove('hidden'); //unhide our add form\n                }\n                break;\n            case (target.id === 'addTaskButton'): { //user is creating a new task\n                    makeTaskForm();\n                    if (options.length >= 1) {\n                        updateSelectOptions(options); \n                    }\n                    formContainer.classList.remove('hidden'); //make sure the form is visible\n                }\n                break;\n            case (target.id === 'cancel'): {\n                    formContainer.classList.add('hidden'); //hide the form\n                    document.querySelector('form').reset(); //reset the form\n                }\n                break;\n            case (target.id === 'submit'): //making either project folder or individual task \n                {\n                    let form = document.querySelector('form');\n                    let inputsForm = new FormData(form); //grabs the users form input\n                    let obj = Object.fromEntries(inputsForm); //turn the data into an object\n                    if (formContainer.firstChild.id === 'newTaskForm') { \n                        let newTask = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.CreateTask)(obj); //variable to hold our returns task object from our factory function\n                        let { project } = newTask; //get the project property from our task object\n                        _tasks__WEBPACK_IMPORTED_MODULE_3__.projects[project].tasks.push(newTask); //adding new task object to the tasks array property of our nested project object in our global projects object. if prop exists great, if not it is created\n                        _tasks__WEBPACK_IMPORTED_MODULE_3__.all.push(newTask); //task object gets put as it's own property in the global all object\n                        let currentFolder = document.getElementById('folder-title').querySelector('h2').getAttribute('data-heading'); //get the dataheading of our folder title\n                        if (currentFolder.toLowerCase() === project.toLowerCase()) { //if the current folder user has open is equal to the newly created task objects property title\n                            _helpers__WEBPACK_IMPORTED_MODULE_2__.taskListUL.innerHTML = ''; //wipe everytime to avoid duplicating tasks\n                            _tasks__WEBPACK_IMPORTED_MODULE_3__.projects[project].tasks.forEach(task => (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.appendLI)(task)); //append all tasks in that project folder to the dom\n                        }\n                    } else if (formContainer.firstChild.id === 'newProjectForm') { //we are creating a project folder object\n                        let newProject = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.CreateProject)(obj); //variable to hold our returned project object from our factory function\n                        if (_tasks__WEBPACK_IMPORTED_MODULE_3__.projects[newProject.title]) { //checking for duplicates\n                            alert('sorry no duplicate folder names');\n                            return;\n                        } else {\n                            _tasks__WEBPACK_IMPORTED_MODULE_3__.projects[newProject.title] = newProject; //adding title of new project as a property in our global projects object and setting it equal to the project object value\n                            updateNav(newProject); //adding new nav list items to the dom (nav area)\n                        }\n                    }\n                    formContainer.classList.add('hidden'); //after our objects are created and updated we will hide the form\n                    form.reset(); //reset the form \n                }\n                break;\n            case (target.classList.contains('projectNav')): //user clicked on nav li so we will append selected project's tasks to the dom\n                {\n                    makeTaskForm();\n                    if (options.length >= 1) {\n                        updateSelectOptions(options); \n                    }\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.newNavSelection)(target); //make whichever li our selected nav li (see helper function newNavSelection)\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.toggleHiddenControls)(); //show the delete project button (please see toggleHiddenControls helper function)\n                    const dataName = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.setHeading)(target); //make the project folder title match the nav li and return the string of it to a variable\n                    let optionName = document.querySelector(`option[selected=\"selected\"]`); //grab the currently selected option in our project selection in the add form\n                    if (optionName) { //if there is a currently selected option in the select element\n                        optionName.removeAttribute('selected'); //remove the selected attribute of it\n                    }\n                    document.querySelector(`option[value=\"${target.text.toLowerCase()}\"]`).setAttribute('selected', 'selected'); //set the selected project folder to the selected option \n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.printProjectTasks)(dataName); //print tasks of the selected project to the page\n                }\n                break;\n            case (target.classList.contains('delete')): //deleting task from dom\n                {\n                    let checkingFolderTitle = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.getHeading)().innerText.toLowerCase();\n                    let li = target.parentNode.parentNode;\n                    let sibling = li.firstElementChild;\n                    let task = sibling.dataset.title;\n                    let projectTitle = sibling.dataset.project;\n                    if (checkingFolderTitle === 'total') {\n                        (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.removeTask)(_tasks__WEBPACK_IMPORTED_MODULE_3__.completed, projectTitle, task);\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.deleteTaskFromDom)(task, 0);\n                    } else {\n                        (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.removeTask)(_tasks__WEBPACK_IMPORTED_MODULE_3__.projects, projectTitle, task);\n                        (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.removeTask)(_tasks__WEBPACK_IMPORTED_MODULE_3__.all, projectTitle, task);\n                        (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.deleteTaskFromDom)(task, 0);\n                    }\n                }\n                break;\n            case (target.classList.contains('task') && target.dataset.status === 'false'): //marking tasks complete\n                {\n                    let taskTitle = target.parentElement.querySelector('#taskName').innerText;\n                    let projectFolder = target.dataset.project;\n                    let taskObj = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.getTask)(projectFolder, taskTitle);\n                    if (!taskObj.complete) {\n                        taskObj.status = true;\n                        taskObj.complete = _tasks__WEBPACK_IMPORTED_MODULE_3__.completeTask;\n                    } \n                    target.dataset.status = true;\n                    taskObj.complete(_tasks__WEBPACK_IMPORTED_MODULE_3__.projects, projectFolder, taskTitle);\n                    (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.removeTask)(_tasks__WEBPACK_IMPORTED_MODULE_3__.all, taskObj, taskTitle);\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.deleteTaskFromDom)(taskTitle, 1000);\n                }\n                break;\n            case (target.id === 'allNav'):\n                (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.goToAll)();\n                break;\n            case (target.id === 'completedAll'):\n                {\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.newNavSelection)(target); //make the completed all nav li our selected nav li (see helper function newNavSelection)\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.toggleHiddenControls)(); //hide the delete project button (please see toggleHiddenControls helper function)\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.setHeading)(target); //make the project folder title match the completed nav li\n                    let flattenedArr = _tasks__WEBPACK_IMPORTED_MODULE_3__.completed.flat(1);\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.printTasks)(flattenedArr);\n                }\n                break;\n            case (target.id === 'deleteProjectButton'):\n                {\n                    let h2 = document.getElementById('folder-title').querySelector('h2');\n                    const projectName = h2.getAttribute('data-heading'); //make sure to make sure the data-heading has no spaces\n                    let selectOptions = document.querySelector(`select[name=\"project\"]`);\n                    let optionsIndexToRemove = options.findIndex(option => option === projectName);\n                    options.splice(optionsIndexToRemove, 1);\n                    for (let i = 0; i < selectOptions.length; i++) {\n                        if (selectOptions.options[i].value === projectName) {\n                            selectOptions.remove(i);\n                        }\n                    }\n                    let navListItem = document.querySelector(`nav [data-title=\"${projectName}\"]`).parentNode.parentNode;\n                    navListItem.remove();\n                    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.goToAll)();\n                    (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.removeProject)(_tasks__WEBPACK_IMPORTED_MODULE_3__.projects, projectName);      \n                    (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setRemovalOfNavValue)(projectName); \n                    (0,_storage__WEBPACK_IMPORTED_MODULE_1__.setRemovalOfOptionValues)(projectName);\n                }\n                break;\n            case (target.id === 'sortByButton'):\n                {\n                    let sortByContainer = document.querySelector('#sortBySelect');\n                    let sortByChoice = sortByContainer.options[sortByContainer.selectedIndex].value;\n                    if (!sortByChoice) {\n                        break;\n                    } else {\n                        let currentHeading = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.getHeading)().dataset.heading;\n                        if (currentHeading === 'all') {\n                            let sortedArray = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.sortTasks)(_tasks__WEBPACK_IMPORTED_MODULE_3__.all, currentHeading, sortByChoice);\n                            (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.printTasks)(sortedArray);             \n                        } else if (currentHeading === 'total') {\n                            let sortedArray = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.sortTasks)(_tasks__WEBPACK_IMPORTED_MODULE_3__.completed, currentHeading, sortByChoice);\n                            (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.printTasks)(sortedArray);    \n                        } else {\n                            let sortedArray = (0,_tasks__WEBPACK_IMPORTED_MODULE_3__.sortTasks)(_tasks__WEBPACK_IMPORTED_MODULE_3__.projects, currentHeading, sortByChoice);\n                            (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.printTasks)(sortedArray);\n                        }\n                    }\n                }\n                break;\n        }\n        setAllStorage();\n    });\n\n  };\n  \n  \n\n\n//# sourceURL=webpack://todo/./src/dom.js?");

/***/ }),

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ro\": () => (/* binding */ ro),\n/* harmony export */   \"taskListUL\": () => (/* binding */ taskListUL),\n/* harmony export */   \"toggleNav\": () => (/* binding */ toggleNav),\n/* harmony export */   \"toggleHiddenControls\": () => (/* binding */ toggleHiddenControls),\n/* harmony export */   \"printProjectTasks\": () => (/* binding */ printProjectTasks),\n/* harmony export */   \"printTasks\": () => (/* binding */ printTasks),\n/* harmony export */   \"deleteTaskFromDom\": () => (/* binding */ deleteTaskFromDom),\n/* harmony export */   \"newNavSelection\": () => (/* binding */ newNavSelection),\n/* harmony export */   \"getHeading\": () => (/* binding */ getHeading),\n/* harmony export */   \"setHeading\": () => (/* binding */ setHeading),\n/* harmony export */   \"goToAll\": () => (/* binding */ goToAll),\n/* harmony export */   \"appendLI\": () => (/* binding */ appendLI)\n/* harmony export */ });\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tasks */ \"./src/tasks.js\");\n\n\nconst nav = document.querySelector('nav');\nconst allSelection = document.querySelector('#allNav');\nconst taskListUL = document.querySelector(\"ul.task-list\"); //section where our tasks are going to be appended to\n\nlet ro = new ResizeObserver( entries => {\n    for (let entry of entries) {\n      const cr = entry.contentRect;\n      (cr.width >= 1300) ? nav.classList.remove('hidden') : nav.classList.add('hidden');\n    }\n  });\n\nfunction toggleNav() {\n    nav.classList.toggle('hidden'); //hide or show our nav area\n}\n\nfunction toggleHiddenControls() { //to hide or show the delete project button depending on selected project folder\n    let deleteProjectButton = document.querySelector('#deleteProjectButton');\n    let selectedNav = document.querySelector('.selected');\n    if (selectedNav === allSelection || selectedNav.id === \"completedAll\") { //if selected folder title is all or completed\n        deleteProjectButton.classList.add('hidden'); //hide the delete button\n    } else {\n        deleteProjectButton.classList.remove('hidden');  //show the delete button\n    }\n}\n\nfunction printProjectTasks(title) {\n    let project = (0,_tasks__WEBPACK_IMPORTED_MODULE_0__.getProject)(title)\n    let projectTasks = project.tasks;\n    printTasks(projectTasks);\n}\n\nfunction printTasks(arr) {\n    taskListUL.innerHTML = '';\n    arr.forEach(task => appendLI(task));\n}\n\nfunction deleteTaskFromDom(query, delay) {\n    query = (0,_tasks__WEBPACK_IMPORTED_MODULE_0__.deleteSpacesInStrings)(query);\n    let selectedTask = document.querySelector(`[data-title=${query}]`);\n    let li = selectedTask.parentNode;\n    setTimeout(() => li.remove(), delay);\n}\n\nfunction newNavSelection(target) { //target will be a nav li inside the nav ul\n    let selection = document.querySelector('.selected'); //grab the currently selected nav list item \n    if (selection) { //if that exists\n        selection.classList.remove('selected'); //we remove that class\n    }\n    target.classList.add('selected'); //add our new selected li (the target) the proper class\n}\n\nfunction getHeading() { //returns the existing folder title dom element\n    let h2 = document.getElementById('folder-title').querySelector('h2');\n    return h2;\n}\n\nfunction setHeading(target) { //makes the project folder title match the targeted nav li item\n    let newHeading = target.text; //set a heading variable to be equal to the string value of the text content of our target\n    let h2 = getHeading(); //gets the current project folder title heading (please see getHeading helper function)\n    h2.setAttribute('data-heading', `${newHeading.toLowerCase()}`); //set that active heading to new data-heading from our target\n    h2.innerHTML = newHeading; //set it's innerHTML to equal the textConent of our nav li target\n    const dataName = h2.getAttribute('data-heading'); //grab the recently set data-heading attribute value\n    taskListUL.innerHTML = ''; //erase all task list items from the task list ul\n    return dataName; \n}\n\nfunction goToAll() {\n    newNavSelection(allSelection); //make the all nav li our selected nav li (see helper function newNavSelection)\n    setHeading(allSelection); //make the project folder title match the all nav li\n    printTasks(_tasks__WEBPACK_IMPORTED_MODULE_0__.all); //print all the task properties inside our global all object\n    toggleHiddenControls(); //hide the delete project button (please see toggleHiddenControls helper function)\n}\n\nfunction appendLI(obj) {\n    const {title, priority, status, project} = obj; //object destructuring to make variables out of our desired task object properties\n    let titleNoSpaces = (0,_tasks__WEBPACK_IMPORTED_MODULE_0__.deleteSpacesInStrings)(title); //for the select option and searching by data-title queries, it's best if we remove the spaces from the title\n    let li = document.createElement('li'); \n    li.classList.add('task-item', 'flex'); //adding the appropriate classes to our newly created list item\n    li.innerHTML = `\n        <div class=\"taskicon-container task\" data-project=\"${project}\" data-title=\"${titleNoSpaces}\" data-status=\"${status}\">\n        <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon icon-tabler icon-tabler-circle\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"#000000\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <circle cx=\"12\" cy=\"12\" r=\"9\" />\n        </svg>\n    </div>\n    <div class=\"task\">\n        <p id=\"taskName\">${title}</p>\n    </div>\n    <div class=\"priority-container task\">\n        <p>Priority: <span data-priority=\"${priority}\" class=\"priority\">${priority}</span></p>\n    </div>\n    <div class=\"task edit-container flex\">\n        <div class=\"taskicon-container delete\">\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                class=\"icon icon-tabler icon-tabler-x\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"#000000\"\n                fill=\"none\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n            >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n            </svg>\n        </div>\n    </div>  \n    `;\n    taskListUL.appendChild(li); //append the newly made task list item to the tasks list on the page\n}\n\n\n\n//# sourceURL=webpack://todo/./src/helpers.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ \"./src/dom.js\");\n\n\nwindow.addEventListener('load', _dom__WEBPACK_IMPORTED_MODULE_0__.getAllStorage);\n\nwindow.addEventListener('load', _dom__WEBPACK_IMPORTED_MODULE_0__.activateListeners);\n\n\n\n\n//# sourceURL=webpack://todo/./src/index.js?");

/***/ }),

/***/ "./src/storage.js":
/*!************************!*\
  !*** ./src/storage.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setStorage\": () => (/* binding */ setStorage),\n/* harmony export */   \"setNavValues\": () => (/* binding */ setNavValues),\n/* harmony export */   \"setSelectOptionValues\": () => (/* binding */ setSelectOptionValues),\n/* harmony export */   \"setRemovalOfNavValue\": () => (/* binding */ setRemovalOfNavValue),\n/* harmony export */   \"setRemovalOfOptionValues\": () => (/* binding */ setRemovalOfOptionValues)\n/* harmony export */ });\n\nlet navList = [];\nlet optionList = [];\n\nfunction setStorage(name, obj) {\n    localStorage.setItem(name, JSON.stringify(obj));\n} \n\nfunction setNavValues(nav) {\n    const elements = [...nav];\n    elements.forEach(el => navList.push(el.textContent));\n    setStorage('navList', navList);\n}\n\nfunction setSelectOptionValues(arr) {\n    arr.forEach(option => optionList.push(option.textContent));\n    setStorage('optionList', optionList);\n}\n\nfunction setRemovalOfNavValue(name) {\n    let navItemIndex = navList.findIndex(li => li === name);\n    navList.splice(navItemIndex, 1);\n    setStorage('navList', navList);\n}\n\nfunction setRemovalOfOptionValues(name) {\n    let optionItemIndex = optionList.findIndex(option => option === name);\n    optionList.splice(optionItemIndex, 1);\n    setStorage('optionList', optionList);\n}\n\n\n\n\n\n//# sourceURL=webpack://todo/./src/storage.js?");

/***/ }),

/***/ "./src/tasks.js":
/*!**********************!*\
  !*** ./src/tasks.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CreateProject\": () => (/* binding */ CreateProject),\n/* harmony export */   \"CreateTask\": () => (/* binding */ CreateTask),\n/* harmony export */   \"getProject\": () => (/* binding */ getProject),\n/* harmony export */   \"getTask\": () => (/* binding */ getTask),\n/* harmony export */   \"removeTask\": () => (/* binding */ removeTask),\n/* harmony export */   \"removeProject\": () => (/* binding */ removeProject),\n/* harmony export */   \"deleteSpacesInStrings\": () => (/* binding */ deleteSpacesInStrings),\n/* harmony export */   \"sortTasks\": () => (/* binding */ sortTasks),\n/* harmony export */   \"completeTask\": () => (/* binding */ completeTask),\n/* harmony export */   \"projects\": () => (/* binding */ projects),\n/* harmony export */   \"completed\": () => (/* binding */ completed),\n/* harmony export */   \"all\": () => (/* binding */ all)\n/* harmony export */ });\n\n      let projects = {}; \n      let completed = []; \n      let all = [];\n\n      //project factory function\n      function CreateProject(obj) {\n        let {title} = obj;\n        let tasks;\n        (obj.tasks) ? tasks = obj.tasks : tasks = [];\n        return {\n          title, \n          tasks\n        };\n      };\n  \n      //task factory function\n      function CreateTask(obj) {\n        let {title, priority, project} = obj;\n        let status;\n        (obj.status) ? tasks = obj.status : status = false;\n        let dateCreated = new Date();\n        return {          \n          title,\n          priority,\n          project,\n          status,\n          dateCreated,\n          complete: function(obj, proj, task) {\n            this.status = true;\n            completeTask(obj, proj, task);\n          }\n        };\n      }\n\n      //helper functions\n    function deleteSpacesInStrings(str) {\n        if (/\\s/.test(str)) {\n            // It has any kind of whitespace\n            str = str.replace(/ +/g, \"\");\n        }\n        return str;\n    }\n\n    function getTaskIndex(proj, task) {\n        let project = getProject(proj);\n        let taskIndex = project.tasks.findIndex(obj => obj.title === task);\n        return taskIndex;\n    }\n\n    function getProject(name) {\n      let project = projects[name];\n      return project;\n  }\n\n  function getTask(proj, task) {\n      let project = getProject(proj)\n      if (!project) {\n        //maybe?\n      } else {\n        let taskIndex = getTaskIndex(proj, task);\n        let todo = project.tasks[taskIndex];\n        return todo;\n      }\n}\n\n      function removeTask(obj, proj, task) {\n        if (obj === all || obj === completed) { //objects are our global arrays of task objects\n          let taskNoSpaces = deleteSpacesInStrings(task);\n          let taskIndex = obj.findIndex(todo => todo.title === taskNoSpaces); //objects are actually arrays which is why array methods are working here\n          let removed = obj.splice(taskIndex, 1);\n          return removed;\n        } else { //obj is equal to our global projects object\n          let taskIndex = getTaskIndex(proj, task);\n          let removed = obj[proj].tasks.splice(taskIndex, 1);\n          return removed;\n        }\n      }\n\n      function removeProject(proj) {\n        delete projects[proj];\n      }\n\n      function completeTask(obj, proj, task) {\n        let completedTask = removeTask(obj, proj, task); //return the removed task object into a variable\n        completed.push(completedTask); //push that object into our global completed array\n      }\n\n      function sortingLogic(obj, proj, method) {\n        if (obj === all) {\n          if (method === 'alphabetical') {\n            let sortedArr = obj.sort((a, b) => a.title.localeCompare(b.title));\n            return sortedArr;\n          } else if (method === 'priority') {\n            let sortedArr = obj.sort((a, b) => a.priority.localeCompare(b.priority));\n            return sortedArr;\n          } else if (method === 'recent') {\n              let sortedArr = obj.sort((a, b) => a.dateCreated - b.dateCreated);\n              return sortedArr;\n          }\n        } else if (obj === completed) {\n          let flattened = obj.flat(1);\n          if (method === 'alphabetical') {\n            let sortedArr = flattened.sort((a, b) => a.title.localeCompare(b.title));\n            return sortedArr;\n          } else if (method === 'priority') {\n            let sortedArr = flattened.sort((a, b) => a.priority.localeCompare(b.priority));\n            return sortedArr;\n          } else if (method === 'recent') {\n              let sortedArr = flattened.sort((a, b) => a.dateCreated - b.dateCreated)\n              return sortedArr;\n          }\n        } else {\n            if (method === 'alphabetical') {\n              let sortedArr = obj[proj].tasks.sort((a, b) => a.title.localeCompare(b.title));\n              return sortedArr;\n            } else if (method === 'priority') {\n              let sortedArr = obj[proj].tasks.sort((a, b) => a.priority.localeCompare(b.priority));\n              return sortedArr;\n            } else if (method === 'recent') {\n                let sortedArr = obj[proj].tasks.sort((a, b) => a.dateCreated - b.dateCreated)\n                return sortedArr;\n            }\n        }\n      }\n\n      function sortTasks(obj, proj, choice) {\n        switch(true) {\n          case (choice === 'alphabetical'): \n            let sortedAlpha = sortingLogic(obj, proj, choice);\n            return sortedAlpha;\n          case (choice === 'priority'): \n            let sortedPriority = sortingLogic(obj, proj, choice);\n            return sortedPriority;\n          case (choice === 'recent'): \n            let sortedRecent = sortingLogic(obj, proj, choice);\n            return sortedRecent;\n        }\n      }\n\n      \n\n//# sourceURL=webpack://todo/./src/tasks.js?");

/***/ }),

/***/ "./src/zdog.js":
/*!*********************!*\
  !*** ./src/zdog.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"animate\": () => (/* binding */ animate)\n/* harmony export */ });\n/* harmony import */ var zdog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zdog */ \"./node_modules/zdog/js/index.js\");\n/* harmony import */ var zdog__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(zdog__WEBPACK_IMPORTED_MODULE_0__);\n\n\nlet isSpinning = true;\n\nlet illo = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Illustration)({\n  element: '.zdog-canvas',\n  dragRotate: true,\n  resize: true,\n  rotate: { y: -zdog__WEBPACK_IMPORTED_MODULE_0__.TAU/20},\n    // stop rotation when dragging starts\n  onDragStart: function() {\n    isSpinning = false;\n    },\n});\n\nlet anchor = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Anchor)({\n  addTo: illo,\n  // options\n});\n\n//front side of book\nlet book = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().RoundedRect)({\n  addTo: anchor,\n  width: 50,\n  height: 80,\n  stroke: 12,\n  color: '#FB7E19',\n  fill: true,\n});\n\n//pages of book\nnew (zdog__WEBPACK_IMPORTED_MODULE_0___default().RoundedRect)({\n  addTo: anchor,\n  width: 50,\n  height: 80,\n  stroke: 12,\n  color: 'white',\n  fill: true,\n  translate: { x: 2, y: -1, z: -3 },\n  backface: false,\n});\n\n//hole anchor\nlet anchorHoles = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Anchor)({\n  addTo: book,\n  translate: { x: -22, y: -35 }, //move left 22px, up 35px\n});\n\n//holes on book\nlet hole = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Shape)({\n  addTo: anchorHoles,\n  // no path set, default to single point\n  stroke: 4,\n  color: 'white',\n  backface: false,\n});\n\n//binding rings\nlet ring = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Ellipse)({\n  addTo: anchorHoles,\n  diameter: 11,\n  quarters: 2,\n  stroke: 5,\n  color: 'black',\n  translate: { x: -4 },\n  rotate: { x: zdog__WEBPACK_IMPORTED_MODULE_0__.TAU/4, y: zdog__WEBPACK_IMPORTED_MODULE_0__.TAU/2 },\n});\n\n//next series of holes and rings\nfor (let i = 10; i <= 70; i+= 10) {\n  hole.copy({\n    translate: { y: i },\n  }); \n  ring.copy({\n    translate: { x: -4, y: i },\n  });\n}\n\n//design on book\n\nlet face = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Group)({\n  addTo: book,\n});\n\nlet eye = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().RoundedRect)({\n  addTo: face,\n  translate: { x: -8, y: -20, z: 5 },\n  backface: false,\n  stroke: 3,\n  color: 'white',\n  cornerRadius: 10,\n  width: 12,\n  height: 14,\n  fill: true,\n});\n\n\nlet pupil = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Hemisphere)({\n  addTo: eye,\n  diameter: 8,\n  stroke: false,\n  color: 'black',\n  backface: false,\n  translate: { z: 1 },\n});\n\nlet otherEye= eye.copy({\n  translate: { x: 12, y: -20, z: 5},\n});\n\npupil.copy({\n  addTo: otherEye,\n});\n\n\nlet smiley = new (zdog__WEBPACK_IMPORTED_MODULE_0___default().Ellipse)({\n  addTo: book,\n  diameter: 20,\n  quarters: 2,\n  translate: { x: 2, y: 2.5, z: 4.5 },\n  rotate: { z: zdog__WEBPACK_IMPORTED_MODULE_0__.TAU/4 },\n  closed: true,\n  color: 'white',\n  stroke: 8,\n  fill: true,\n  backface: false,\n});\n\n//tongue\nsmiley.copy({\n  addTo: smiley,\n  diameter: 10,\n  color: 'pink',\n  translate: { x: 4, y: 0, z: 2 },\n  rotate: { z: zdog__WEBPACK_IMPORTED_MODULE_0__.TAU },\n});\n  \n  // -- animate --- //\n  \n  function animate() {\n    if (isSpinning) illo.rotate.y -= 0.02;\n    illo.updateRenderGraph();\n    // animate next frame\n    requestAnimationFrame( animate );\n  }\n  \n  \n\n//# sourceURL=webpack://todo/./src/zdog.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;